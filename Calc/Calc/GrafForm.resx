<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>